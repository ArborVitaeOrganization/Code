/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.59
 * Generated at: 2022-07-07 08:48:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!doctype html>\n");
      out.write("\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write(" \n");
      out.write(" <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write(" <link rel=\"icon\" type=\"image/x-icon\" href=\"");
      out.print(request.getContextPath());
      out.write("/imgs/sum.png\">\n");
      out.write(" <link href=\"");
      out.print(request.getContextPath());
      out.write("/css/style.css\" rel=\"stylesheet\">\n");
      out.write(" <script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-1.12.1.js\"></script>\n");
      out.write("\n");
      out.write(" <title>SUM NUMBERS</title>\n");
      out.write("\n");
      out.write(" <script>\n");
      out.write(" $( document ).ready(function() {\n");
      out.write("  \n");
      out.write("	$(\"#reset\").click(function(){\n");
      out.write("		 $(\"#first\").val(\"\");\n");
      out.write("		 $(\"#second\").val(\"\");\n");
      out.write("		 $(\"#result\").val(\"\");\n");
      out.write("		 $(\"#error\").remove();\n");
      out.write("		});	\n");
      out.write(" });\n");
      out.write(" </script>\n");
      out.write("</head>\n");
      out.write("\n");

String login = (String) request.getAttribute("login");
if(login == null) {
	login = "";
}

String password = (String) request.getAttribute("password");
if(password == null) {
	password = "";
}

String first = (String) request.getAttribute("first");
if(first == null) {
	first = "";
}

String second = (String) request.getAttribute("second");
if(second == null) {
	second = "";
}

String result = (String) request.getAttribute("result");
if(result == null) {
	result = "";
} 

String error = (String) request.getAttribute("error");

      out.write("\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("<div class=\"panel\">\n");
      out.write("<h3>SUM NUMBERS WITH DUAL</h3>\n");
      out.write("<br>\n");
      out.write("<a href=\"");
      out.print(request.getContextPath());
      out.write("/index.jsp\">\n");
      out.write("<img style=\"position: absolute;top:35px;width:50px;\" src=\"./imgs/sum.png\"></a>\n");
      out.write("<form method=\"post\" action=\"connection\" name=\"DatabaseConnection\">\n");
      out.write(" Database credentials:<br>\n");
      out.write(" <br>\n");
      out.write(" <label for=\"login\">Login </label><input id=\"login\" type=\"text\" name=\"login\" value=\"");
      out.print(login );
      out.write("\" required/><br>\n");
      out.write(" <br>\n");
      out.write(" <label for=\"second\">Password </label><input id=\"password\" type=\"password\" name=\"password\" value=\"");
      out.print(password );
      out.write("\"required/><br>\n");
      out.write(" <br>\n");
      out.write(" <hr>\n");
      out.write(" Perform the sum of two numbers:<br>\n");
      out.write(" <br>\n");
      out.write(" <label for=\"first\">A = </label><input id=\"first\" type=\"number\" name=\"first\" step=\"any\" value=\"");
      out.print(first );
      out.write("\" autocomplete=\"off\" required/><br>\n");
      out.write(" <br>\n");
      out.write(" <label for=\"second\">B = </label><input id=\"second\" type=\"text\" name=\"second\" step=\"any\" value=\"");
      out.print(second );
      out.write("\" autocomplete=\"off\" required/><br>\n");
      out.write(" <br>\n");
      out.write(" <hr>\n");
      out.write(" <br>\n");
      out.write(" <label for=\"result\">A + B = </label><input id=\"result\" type=\"text\" name=\"result\" value=\"");
      out.print(result );
      out.write("\" readonly/><br>\n");
      out.write(" <br>\n");
      out.write(" ");
 if(error != null) {
      out.write("\n");
      out.write(" 	<div id=\"error\" class=\"error\">");
      out.print( error );
      out.write("</div>\n");
      out.write(" ");
} 
      out.write("\n");
      out.write(" <input type=\"submit\" value=\"Compute\"><input id=\"reset\" type=\"button\" value=\"Reset\">\n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
